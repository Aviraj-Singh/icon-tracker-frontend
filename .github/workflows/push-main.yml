name: push-main

# 1. Run unit and integration tests
# 2. Push containers to AWS ECR with tag based on incrementing build number
# 3. Recommit an update to the chart's deployments with the updated build number in the `deployment` branch

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'chart/**'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the container
        run: docker-compose build

#      - uses: codecov/codecov-action@v2
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: ./src/coverage.out
#          flags: unit
#          fail_ci_if_error: true
#
#      - uses: codecov/codecov-action@v2
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: ./tests/coverage.out
#          flags: integration
#          fail_ci_if_error: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr-worker
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-api.outputs.registry }}
          ECR_REPOSITORY: icon-expolorer-frontend
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build --build-arg SERVICE_NAME=api -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update prod-mainnet deployment values file and re-commit
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'chart/deployments/prod-mainnet/values.test.yaml'
          propertyPath: 'deployment.image.tag'
          value: ${{ github.run_number }}
          branch: deployment
          targetBranch: main
          createPR: 'false'
          message: 'Update prod deployment image version to ${{ github.run_number }}'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update prod-sejong deployment values file and re-commit
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'chart/deployments/prod-sejong/values.test.yaml'
          propertyPath: 'deployment.image.tag'
          value: ${{ github.run_number }}
          branch: deployment
          targetBranch: main
          createPR: 'false'
          message: 'Update prod deployment image version to ${{ github.run_number }}'
          token: ${{ secrets.GITHUB_TOKEN }}

