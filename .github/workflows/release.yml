name: release

# 1. Run unit and integration tests
# 2. Push containers to AWS ECR and dockerhub tagged with release
# 3. Recommit an update to the chart's deployments with the updated build number in the `deployment` branch

on:
  release:
    types: [created]
    tags:
      - "v*.*.*"

jobs:
#  tests:
#  name: Run tests
#    runs-on: ubuntu-latest
#    steps:

  build:
    name: Build containers
    runs-on: ubuntu-latest
#    needs: tests
    strategy:
      matrix:
        include:
          - network-name: mainnet
            deployment-environment: prod
            akid-ref: AWS_ACCESS_KEY_ID_MAINNET
            sak-ref: AWS_SECRET_ACCESS_KEY_MAINNET
            ecr-repository: icon-explorer-frontend-mainnet
          - network-name: sejong
            deployment-environment: prod
            akid-ref: AWS_ACCESS_KEY_ID_SEJONG
            sak-ref: AWS_SECRET_ACCESS_KEY_SEJONG
            ecr-repository: icon-explorer-frontend-sejong
    env:
      NETWORK_NAME: ${{ matrix.network-name }}
      DEPLOYMENT_ENVIRONMENT: ${{ matrix.deployment-environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Tag name
        id: source
        run: |
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[matrix.akid-ref] }}
          aws-secret-access-key: ${{ secrets[matrix.sak-ref] }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ matrix.ecr-repository }}
          IMAGE_TAG: prod-${{ steps.source.outputs.TAG }}
        run: |
          docker build --target prod --build-arg NETWORK_NAME=$NETWORK_NAME --build-arg DEPLOYMENT_ENVIRONMENT=$DEPLOYMENT_ENVIRONMENT -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  update-values:
    name: Update values files
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout charts repo
        uses: actions/checkout@v2
        with:
          repository: geometry-labs/icon-charts
          ref: main
          path: charts
          token: ${{ secrets.ICON_CHARTS_PAT }}

      - name: Update prod-mainnet-eu-west-1 deployment values file
        uses: fjogeleit/yaml-update-action@master
        with:
          workDir: charts
          repository: geometry-labs/icon-charts
          valueFile: 'deployments/prod-eu-west-1/mainnet/tracker-frontend/values.yaml'
          propertyPath: 'deployment.image.tag'
          value: prod-${{ steps.source.outputs.TAG }}
          branch: main
          createPR: 'false'
          updateFile: true
          commitChange: false

      - name: Update prod-sejong-us-west-2 deployment values file
        uses: fjogeleit/yaml-update-action@master
        with:
          workDir: charts
          repository: geometry-labs/icon-charts
          valueFile: 'deployments/prod-us-west-2/sejong/tracker-frontend/values.yaml'
          propertyPath: 'deployment.image.tag'
          value: prod-${{ steps.source.outputs.TAG }}
          branch: main
          createPR: 'false'
          updateFile: true
          commitChange: false

      - name: Update prod-mainnet deployment values file
        id: yaml-update
        uses: fjogeleit/yaml-update-action@master
        with:
          workDir: charts
          repository: geometry-labs/icon-charts
          valueFile: 'deployments/prod-us-west-2/mainnet/tracker-frontend/values.yaml'
          propertyPath: 'deployment.image.tag'
          value: prod-${{ steps.source.outputs.TAG }}
          branch: main
          createPR: 'false'
          token: ${{ secrets.ICON_CHARTS_PAT }}
          updateFile: true
          commitChange: false

      - name: Configure credentials
        uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          token: '${{ secrets.ICON_CHARTS_PAT }}'
          global: true

      - name: Commit all updates
        run: |
          git add -A
          git commit -m "tracker-frontend prod deployment (mainnet) image versions to ${{ steps.source.outputs.TAG }}"
          git push origin
        working-directory: charts

      - name: Push tags
        run: |
          git tag -f tracker-frontend-prod-uswest2
          git tag -f tracker-frontend-prod-euwest2
          git push -f origin --tags
        working-directory: charts
